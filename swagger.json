{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Petly - OpenAPI 3.0",
    "description": "The final project for the React.Js and Node.Js course of Full Stack Developer students (IT school GoIT).",
    "contact": {
      "email": "kadulin@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.6"
  },
  "servers": [
    {
      "url": "https://petsapi.cyclic.app/api"
    },
    {
      "url": "http://localhost:3030/api"
    }
  ],
  "tags": [
    {
      "name": "auth"
    },
    {
      "name": "user"
    },
    {
      "name": "friends"
    },
    {
      "name": "news"
    },
    {
      "name": "pets"
    },
    {
      "name": "notices"
    },
    {
      "name": "breeds"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "auth"
        ],
        "operationId": "UserRegister",
        "summary": "User registration",
        "parameters": [],
        "description": "description",
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegisterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid data"
          },
          "409": {
            "description": "email already exists"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "operationId": "UserLogin",
        "tags": [
          "auth"
        ],
        "summary": "User authentication",
        "parameters": [],
        "description": "description",
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid data",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad request (invalid request body)"
                }
              }
            }
          },
          "401": {
            "description": "Email doesn't exist / Password is wrong",
            "content": {
              "application/json": {
                "example": {
                  "message": "Email or password is wrong"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logout user",
        "parameters": [],
        "operationId": "UserLogOut",
        "description": "description",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": {
                  "code": 204
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "example": {
                  "code": 401,
                  "message": "Unauthorized (invalid access token)"
                }
              }
            }
          }
        }
      }
    },
    "/auth": {
      "post": {
        "tags": [
          "auth"
        ],
        "operationId": "UserVerifyAuthToken",
        "summary": "User verify Authtoken",
        "parameters": [],
        "description": "description",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized (invalid access token)"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "patch": {
        "tags": [
          "user"
        ],
        "operationId": "UserUpdate",
        "summary": "User update profile",
        "parameters": [],
        "description": "description",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "User update information",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad request (invalid request body)"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized (invalid access token)"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "user"
        ],
        "operationId": "UserGetProfile",
        "summary": "User get profile information",
        "parameters": [],
        "description": "description",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGetProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized (invalid access token)"
                }
              }
            }
          }
        }
      }
    },
    "/friends": {
      "get": {
        "tags": [
          "friends"
        ],
        "operationId": "friends",
        "description": "description",
        "summary": "Get all services and friends",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/news": {
      "get": {
        "tags": [
          "news"
        ],
        "operationId": "NewsGetAll",
        "description": "description",
        "summary": "Get all news",
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "description": "Search text in title",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/pets": {
      "post": {
        "tags": [
          "pets"
        ],
        "operationId": "PetsAdd",
        "description": "description",
        "summary": "Add new pets",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Add new Pets",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PetsAddRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetsAddResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad request (invalid request body)"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized (invalid access token)"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "pets"
        ],
        "operationId": "PetsGetAll",
        "description": "description",
        "summary": "Get all pets",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetsGetAllResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized (invalid access token)"
                }
              }
            }
          }
        }
      }
    },
    "/pets/{id}": {
      "delete": {
        "tags": [
          "pets"
        ],
        "operationId": "PetDelete",
        "description": "description",
        "summary": "Delete pet",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task's id ('id' field in task's object)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request (invalid ID)"
          },
          "401": {
            "description": "Unauthorized (invalid access token)"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    },
    "/notices/{category}": {
      "get": {
        "tags": [
          "notices"
        ],
        "operationId": "NoticesByCategories",
        "description": "description",
        "summary": "Get by Categories and find Notices title",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "category",
            "description": "ID notice",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "sell",
                "lost-found",
                "for-free"
              ]
            }
          },
          {
            "in": "query",
            "name": "findtext",
            "description": "Find text in title",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "isFavorites",
            "description": "Get favorites in category",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "myAdds",
            "description": "Get my Adds",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesCategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad request (invalid request body)"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized (invalid access token)"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "notices"
        ],
        "operationId": "NoticesAddInCategory",
        "description": "description",
        "summary": "Add Notices in category",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "category",
            "description": "ID notice",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "sell",
                "lost-found",
                "for-free"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/NoticesAddInCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesAddResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad request (invalid request body)"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized (invalid access token)"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid input"
                }
              }
            }
          }
        }
      }
    },
    "/notices/byid/{id}": {
      "get": {
        "tags": [
          "notices"
        ],
        "operationId": "NoticesFind",
        "description": "description",
        "summary": "Get Notices by ID",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID notice",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (id incorrect)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad request (id incorrect)"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized (invalid access token)"
                }
              }
            }
          },
          "404": {
            "description": "Notices not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Notices not found"
                }
              }
            }
          }
        }
      }
    },
    "/notices/favorites/{id}": {
      "post": {
        "tags": [
          "notices"
        ],
        "operationId": "NoticesAddFavorites",
        "description": "description",
        "summary": "Added notice to Favorites",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID notice",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "message": "Success added to favorites"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (id incorrect)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad request (id incorrect)"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized (invalid access token)"
                }
              }
            }
          },
          "404": {
            "description": "Notices not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Notices not found in user list"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "notices"
        ],
        "operationId": "NoticesDelFavorites",
        "description": "description",
        "summary": "Del Notices from favorites",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID notice",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "example": {
                  "message": "Success notice delete from favorites"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (id incorrect)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad request (id incorrect)"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized (invalid access token)"
                }
              }
            }
          },
          "404": {
            "description": "Notices not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Notices not found in user list"
                }
              }
            }
          }
        }
      }
    },
    "/breeds": {
      "get": {
        "tags": [
          "breeds"
        ],
        "operationId": "BreedsGetAll",
        "description": "description",
        "summary": "Get all breeds pets",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreedsGetAllResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized (invalid access token)"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserRegisterRequest": {
        "type": "object",
        "required": [
          "userName",
          "email",
          "password",
          "phone",
          "location"
        ],
        "properties": {
          "userName": {
            "type": "string",
            "example": "Степан Бандера"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "demo@demo.com"
          },
          "password": {
            "type": "string",
            "example": "123PaSwOrD"
          },
          "phone": {
            "type": "string",
            "example": "+380971234567"
          },
          "location": {
            "type": "string",
            "example": "Lviv"
          }
        }
      },
      "UserRegisterResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "507f1f77bcf86cd799439012"
          },
          "username": {
            "type": "string",
            "example": "Степан Бандера"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "demo@demo.com"
          },
          "phone": {
            "type": "string",
            "example": "+380971234567"
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "example": "1909-01-01"
          },
          "location": {
            "type": "string",
            "example": "Lviv"
          },
          "avatar": {
            "type": "string",
            "example": ""
          }
        }
      },
      "UserLoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "demo@demo.com"
          },
          "password": {
            "type": "string",
            "example": "123PaSwOrD"
          }
        }
      },
      "UserLoginResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "507f1f77bcf86cd799439012"
              },
              "username": {
                "type": "string",
                "example": "Степан Бандера"
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "demo@demo.com"
              },
              "phone": {
                "type": "string",
                "example": "+380971234567"
              },
              "birthday": {
                "type": "string",
                "format": "date",
                "example": "1909-01-01"
              },
              "location": {
                "type": "string",
                "example": "Lviv"
              },
              "avatar": {
                "type": "string",
                "example": ""
              },
              "favorites": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": [
                    "641a3ac5b825deb246a53f08",
                    "641a3ac5b825deb246a53f08"
                  ]
                }
              },
              "authToken": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MWEzYWM1YjgyNWRlYjI0NmE1M2YwOCIsImlhdCI6MTY3OTQ3Njk0NCwiZXhwIjoxNjgwNjg2NTQ0fQ.qmLBQQyEAhpD57fdxHrGW4v4umjogQ7LVo3V2gCR-S0"
              }
            }
          }
        }
      },
      "UserUpdateRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Степан Бандера"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "demo@demo.com"
          },
          "phone": {
            "type": "string",
            "example": "+380971234567"
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "example": "1909-01-01"
          },
          "location": {
            "type": "string",
            "example": "Lviv"
          },
          "avatar": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "UserUpdateResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "format": "date"
          },
          "location": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "favorites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authToken": {
            "type": "string"
          }
        },
        "$ref": "#/components/schemas/UserDataResponse"
      },
      "UserGetProfileResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "phone": {
                "type": "string"
              },
              "birthday": {
                "type": "string",
                "format": "date"
              },
              "location": {
                "type": "string"
              },
              "avatar": {
                "type": "string"
              },
              "favorites": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "authToken": {
                "type": "string"
              }
            },
            "$ref": "#/components/schemas/UserDataResponse"
          },
          "pets": {
            "$ref": "#/components/schemas/PetsGetAllResponse"
          }
        }
      },
      "UserDataResponse": {
        "example": {
          "_id": "507f1f77bcf86cd799439012",
          "username": "Степан Бандера",
          "email": "demo@demo.com",
          "phone": "380971234567",
          "birthday": "1909-01-01",
          "location": "Lviv",
          "avatar": "",
          "favorites": [
            "641a3ac5b825deb246a53f08",
            "641a3ac5b825deb246a53f08"
          ],
          "authToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MWEzYWM1YjgyNWRlYjI0NmE1M2YwOCIsImlhdCI6MTY3OTQ3Njk0NCwiZXhwIjoxNjgwNjg2NTQ0fQ.qmLBQQyEAhpD57fdxHrGW4v4umjogQ7LVo3V2gCR-S0"
        }
      },
      "FriendsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "507f1f77bcf86cd799439012"
            },
            "title": {
              "type": "string",
              "example": "Притулок для бездомних тварин 'Сіріус'"
            },
            "url": {
              "type": "string",
              "example": "https://dogcat.com.ua"
            },
            "addressUrl": {
              "type": "string",
              "example": "https://goo.gl/maps/iq8NXEUf31EAQCzc6"
            },
            "imageUrl": {
              "type": "string",
              "example": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/friends/frame_287.png"
            },
            "address": {
              "type": "string",
              "example": "Fedorivka, Kyiv Oblast, Ukraine, 07372"
            },
            "phone": {
              "type": "string",
              "example": "+380931934069"
            },
            "email": {
              "type": "string",
              "example": "null"
            },
            "workDay": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "isOpen": {
                    "type": "boolean",
                    "example": false
                  },
                  "from": {
                    "type": "string",
                    "format": "partial-time",
                    "example": "11:00"
                  },
                  "to": {
                    "type": "string",
                    "format": "partial-time",
                    "example": "16:00"
                  }
                }
              }
            }
          }
        }
      },
      "NewsRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "NewsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "format": "date"
            }
          }
        },
        "example": [
          {
            "title": "В День ветеринара в столиці пройде безкоштовний тренінг з надання першої допомоги тваринам",
            "url": "https://www.kmlvm.com.ua/v-den-veterynara-v-stolytsi-projde-bezkoshtovnyj-trening-z-nadannya-pershoyi-dopomogy-tvarynam/",
            "description": "В неділю, 14 серпня, в Тимчасовому притулку для тварин «ВДНГ» пройде тренінг на тему «Надання першої допомоги тваринам». Захід проводиться комунальним підприємством «Київська міська лікарня ветеринарної медицини», фахівці якого навчать всіх бажаючих навичкам надання першої допомоги братам нашим меншим, які потрапили в біду. Без перебільшення, подібні знання можуть врятувати життя чотирилапим. Тренінг безкоштовний, взяти в ньому участь може будь-хто, дозволяється участь зі своїм домашнім улюбленцем. Після тренінгу учасники зможуть отримати безкоштовну консультацію ветеринара, щодо догляду за тваринами, вакцинації та будь-яких інших питань, пов'язаними зі здоров'ям улюбленця. Дата проведення майстер-класу обрана не випадково. 14 серпня в Україні відзначається День працівників ветеринарної медицини і цього року ми вирішили провести такий потрібний тренінг. Для ветеринара головне – це врятовані брати наші менші, а навчити людей надавати первинну допомогу тваринам значить «інвестувати» у врятовані життя тварин в майбутньому. Початок тренінгу об 11:00. Адреса Тимчасового притулку для тварин «ВДНГ»: вулиця Академіка Глушкова, 1, 16 павільйон.",
            "date": "2022-08-12"
          }
        ]
      },
      "PetsAddRequest": {
        "type": "object",
        "required": [
          "name",
          "date",
          "breed",
          "comments"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "full-date"
          },
          "breed": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string",
            "format": "binary"
          }
        },
        "example": {
          "name": "Jack",
          "date": "2018-04-22",
          "breed": "Persian cat",
          "comments": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet, consectetur"
        }
      },
      "PetsAddResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectId"
          },
          "owner": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "full-date"
          },
          "breed": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          }
        },
        "example": {
          "_id": "63f3f58416722f6e4408e435",
          "owner": "63f3f58416722f6e4408e435",
          "name": "Jack",
          "date": "2018-04-22",
          "breed": "Persian cat",
          "comments": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet, consectetur",
          "imageUrl": ""
        }
      },
      "PetsGetAllResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "format": "objectId"
            },
            "owner": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "format": "full-date"
            },
            "breed": {
              "type": "string"
            },
            "comments": {
              "type": "string"
            },
            "imageUrl": {
              "type": "string"
            }
          }
        },
        "example": [
          {
            "_id": "63f3f58416722f6e4408e429",
            "owner": "63f3f58416722f6e4408e435",
            "name": "Jack",
            "date": "2018-04-22",
            "breed": "Persian cat",
            "comments": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet, consectetur",
            "imageUrl": ""
          },
          {
            "_id": "63f3f58416722f6e4408e428",
            "owner": "63f3f58416722f6e4408e430",
            "name": "Jack",
            "date": "2018-04-22",
            "breed": "Persian cat",
            "comments": "Lorem ipsum dolor sit amet, consecteturLorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet, consectetur",
            "imageUrl": ""
          }
        ]
      },
      "NoticesAddInCategoryRequest": {
        "type": "object",
        "required": [
          "category",
          "title",
          "name",
          "breed",
          "location",
          "sex",
          "comments"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "format": "full-date"
          },
          "breed": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "sex": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ]
          },
          "price": {
            "type": "number"
          },
          "currency": {
            "type": "string",
            "enum": [
              "₴",
              "$",
              "€"
            ]
          },
          "comments": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string",
            "format": "binary"
          }
        },
        "example": {
          "category": "sell",
          "title": "Сute dog looking for a home",
          "name": "Rich",
          "birthday": "2020-09-21",
          "breed": "Pomeranian",
          "sex": "male",
          "location": "Lviv",
          "price": 150,
          "currency": "$",
          "comments": "Comments: Lorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet, consectetur Lorem"
        }
      },
      "NoticesAddResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "sell",
              "lost-found",
              "for-free"
            ]
          },
          "title": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "format": "full-date"
          },
          "breed": {
            "type": "string"
          },
          "sex": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ]
          },
          "location": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "currency": {
            "type": "string",
            "enum": [
              "₴",
              "$",
              "€"
            ]
          },
          "comments": {
            "type": "string"
          },
          "umageUrl": {
            "type": "string"
          }
        },
        "example": {
          "_id": "63f3f58416722f6e4408e429",
          "owner": "63f3f58416722f6e4408e429",
          "category": "sell",
          "title": "Сute dog looking for a home",
          "name": "Rich",
          "birthday": "2020-09-21",
          "breed": "Pomeranian",
          "sex": "male",
          "location": "Lviv",
          "price": 150,
          "currency": "$",
          "comments": "Comments: Lorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet, consectetur Lorem",
          "imageUrl": ""
        }
      },
      "NoticesCategoryResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "category": {
              "type": "string",
              "enum": [
                "sell",
                "lost-found",
                "for-free"
              ]
            },
            "title": {
              "type": "string"
            },
            "birthday": {
              "type": "string",
              "format": "full-date"
            },
            "breed": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "price": {
              "type": "number"
            },
            "currency": {
              "type": "string",
              "enum": [
                "₴",
                "$",
                "€"
              ]
            },
            "imageUrl": {
              "type": "string"
            }
          }
        },
        "example": [
          {
            "_id": "63f3f58416722f6e4408e429",
            "category": "sell",
            "title": "Сute dog looking for a home",
            "birthday": "2020-09-21",
            "breed": "Pomeranian",
            "location": "Lviv",
            "price": 150,
            "currency": "$",
            "imageUrl": ""
          }
        ]
      },
      "NoticesByIdResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "sell",
              "lost-found",
              "for-free"
            ]
          },
          "title": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "format": "full-date"
          },
          "breed": {
            "type": "string"
          },
          "sex": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ]
          },
          "location": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "currency": {
            "type": "string",
            "enum": [
              "₴",
              "$",
              "€"
            ]
          },
          "comments": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          }
        },
        "example": {
          "_id": "63f3f58416722f6e4408e429",
          "owner": "63f3f58416722f6e4408e429",
          "category": "sell",
          "title": "Сute dog looking for a home",
          "name": "Rich",
          "birthday": "2020-09-21",
          "breed": "Pomeranian",
          "sex": "male",
          "location": "Lviv",
          "email": "user@mail.com",
          "phone": "+380971234567",
          "price": 150,
          "currency": "$",
          "comments": "Comments: Lorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet, consectetur Lorem",
          "imageUrl": ""
        }
      },
      "BreedsGetAllResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "format": "objectId"
            },
            "name-en": {
              "type": "string"
            },
            "name-ua": {
              "type": "string"
            }
          }
        },
        "example": [
          {
            "_id": "63f3f58416722f6e4408e445",
            "name-en": "Affenpinscher",
            "name-ua": "Аффенпінчер"
          },
          {
            "_id": "63f3f58416722f6e4408e446",
            "name-en": "Airedale Terrier",
            "name-ua": "Ердельтер`єр"
          }
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}